<asm> -> ?<sections>? .eof

<sections> -> <section> *\n <section>*

<section> -> <exec>
<section> -> <data>

<exec> -> exec { ?<functions>? }

<functions> -> <function> *\n <function>*

<function> -> main { ?<instructions>? }
<function> -> .identifier ?(link : <location>)? ?(<func-args>)? ?(ret : <location>)? { ?<instructions>? }

<func-args> -> <func-arg> *,<func-arg>*

<func-arg> -> .identifier : <location>

<location> -> .identifier ?. <location>?

<instructions> -> <instruction> *<break> <instruction>*

<break> -> \n
<break> -> ;

<instruction> -> ?<label>? .instruction ?<args>?

<label> -> .identifier : ?\n?

<args> -> <arg> ?, <args>?

<arg> -> <location>
<arg> -> <immediate>

<immediate> -> # .numericLiteral ?[ .numericLiteral ]?

<data> -> data { ?<data-blocks>? }

<data-blocks> ->Â <data-block> *\n <data-block>*

<data-block> -> <variables>
<data-block> -> .identifier { <variables> }

<variables> -> <variable> *<break> <variable>*

<variable> -> .identifier ?= .numericLiteral?
<variable> -> .identifier ?= .charLiteral?
